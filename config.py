# -*- coding: utf-8 -*-
import os
from dotenv import load_dotenv

load_dotenv()

# ===============================
# üîë API –ù–ê–°–¢–†–û–ô–ö–ò
# ===============================
API_TOKEN = os.getenv("API_TOKEN")
GROUP_ID_STR = os.getenv("GROUP_ID")
ADMIN_ID_STR = os.getenv("MY_ID")
DEEPSEEK_API_KEY = os.getenv("DEEPSEEK")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º ID
try:
    GROUP_ID = int(GROUP_ID_STR) if GROUP_ID_STR else None
except (ValueError, TypeError):
    GROUP_ID = None

try:
    ADMIN_ID = int(ADMIN_ID_STR) if ADMIN_ID_STR else None
except (ValueError, TypeError):
    ADMIN_ID = None

# ===============================
# ‚è∞ –†–ê–°–ü–ò–°–ê–ù–ò–ï –ü–û–°–¢–ò–ù–ì–ê (UTC+5)
# ===============================
POSTING_SCHEDULE = {
    'monday': [
        {'start': '10:00', 'end': '12:00'},
        {'start': '13:00', 'end': '16:00'}
    ],
    'tuesday': [
        {'start': '10:00', 'end': '12:00'},
        {'start': '19:00', 'end': '22:00'}
    ],
    'wednesday': [
        {'start': '10:00', 'end': '12:00'},
        {'start': '13:00', 'end': '16:00'}
    ],
    'thursday': [
        {'start': '10:00', 'end': '12:00'},
        {'start': '17:00', 'end': '22:00'}
    ],
    'friday': [
        {'start': '10:00', 'end': '12:00'},
        {'start': '17:00', 'end': '22:00'},
        {'start': '23:00', 'end': '01:00'}  # –î–æ 1 –Ω–æ—á–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è
    ],
    'saturday': [
        {'start': '13:00', 'end': '16:00'},
        {'start': '23:00', 'end': '02:00'}  # –î–æ 2 –Ω–æ—á–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è
    ],
    'sunday': [
        {'start': '00:00', 'end': '02:00'},  # –° –ø–æ–ª—É–Ω–æ—á–∏ –¥–æ 2 —É—Ç—Ä–∞
        {'start': '12:00', 'end': '16:00'},
        {'start': '19:00', 'end': '22:00'}
    ]
}

# ===============================
# üìù –ü–£–¢–ò –ö –ü–†–û–ú–ü–¢–ê–ú
# ===============================
PROMPT_PATHS = {
    'style_formatting': 'prompts/prompt1.txt',  # –°—Ç–∏–ª—å –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    'group_processing': 'prompts/prompt2.txt',  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –≥—Ä—É–ø–ø—ã
    'post_improvement': 'prompts/prompt3.txt'  # –î–æ—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Å—Ç–æ–≤
}

# ===============================
# üí¨ –¢–ï–ö–°–¢–´ –°–û–û–ë–©–ï–ù–ò–ô
# ===============================
MESSAGES = {
    'start_welcome': "ü§ñ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AUTO-–±–æ—Ç!**\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:",
    'post_creation_prompt': "üìù **–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞**\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∏/–∏–ª–∏ –º–µ–¥–∏–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞:",
    'auto_mode_status': "üîÑ –†–µ–∂–∏–º: AUTO",
    'queue_empty': "üìã **–û—á–µ—Ä–µ–¥—å –ø–æ—Å—Ç–æ–≤ –ø—É—Å—Ç–∞**\n\n–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤ –Ω–µ—Ç.",
    'queue_title': "üìã **–û—Ç–ª–æ–∂–µ–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã ({count})**",
    'preview_title': "üìã **–ü–†–ï–î–ü–†–û–°–ú–û–¢–† –ü–û–°–¢–ê #{post_id}**",
    'preview_footer': "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ",
    'post_published': "‚úÖ **–ü–û–°–¢ –û–ü–£–ë–õ–ò–ö–û–í–ê–ù**\n\n–ü–æ—Å—Ç #{post_id} —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!",
    'post_cancelled': "‚ùå **–ü–û–°–¢ –û–¢–ú–ï–ù–ï–ù**\n\n–ü–æ—Å—Ç #{post_id} –æ—Ç–º–µ–Ω–µ–Ω",
    'post_deleted': "üóë **–ü–æ—Å—Ç —É–¥–∞–ª–µ–Ω**",
    'post_scheduled': "‚è∞ **–ü–æ—Å—Ç –æ—Ç–ª–æ–∂–µ–Ω –Ω–∞ {time}**",
    'settings_current_admin': "üë§ –¢–µ–∫—É—â–∏–π –∞–¥–º–∏–Ω: @{username} (ID: {user_id})",
    'settings_current_group': "üì¢ –ì—Ä—É–ø–ø–∞ –¥–ª—è –ø–æ—Å—Ç–æ–≤: {group_name}\nID: {group_id}",
    'editing_prompt_title': "üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: \"{prompt_name}\"",
    'prompt_updated': "‚úÖ **–ü—Ä–æ–º–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω!**",
    'time_input_prompt': "‚è∞ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú",
    'new_admin_prompt': "üë§ –û—Ç–ø—Ä–∞–≤—å—Ç–µ ID –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞ (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã):",
    'new_group_prompt': "üì¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ ID –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø—ã (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å -100):",
    'admin_change_confirm': "‚ö†Ô∏è **–í–ù–ò–ú–ê–ù–ò–ï!** –í—ã —É–≤–µ—Ä–µ–Ω—ã? –í—ã –ø–æ—Ç–µ—Ä—è–µ—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É!\n\n–ù–æ–≤—ã–π –∞–¥–º–∏–Ω: `{new_admin_id}`",
    'group_checking': "üß™ –ü—Ä–æ–≤–µ—Ä—è—é –¥–æ—Å—Ç—É–ø –∫ –≥—Ä—É–ø–ø–µ...",
    'group_changed': "‚úÖ **–ì—Ä—É–ø–ø–∞ –∏–∑–º–µ–Ω–µ–Ω–∞!**",
    'group_access_error': "‚ùå **–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –≥—Ä—É–ø–ø–µ**",
    'edit_post_prompt': "‚úèÔ∏è **–ü–æ—Å—Ç #{post_id} –æ–∂–∏–¥–∞–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏**\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è–º–∏:",
    'bot_started': "üöÄ **–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!**\n\n–ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –º–Ω–µ –ª—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.",
    'bot_stopping': "üõë **–ë–æ—Ç –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É...**",
    'ai_processing_error': "‚ùå **–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ò–ò**",
    'post_too_long_warning': "‚ö†Ô∏è –¢–µ–∫—Å—Ç –æ–±—Ä–µ–∑–∞–Ω –¥–ª—è –º–µ–¥–∏–∞ (–ª–∏–º–∏—Ç 1024 —Å–∏–º–≤–æ–ª–∞)",
    'input_truncated_warning': "‚ö†Ô∏è –í—Ö–æ–¥–Ω–æ–π —Ç–µ–∫—Å—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±—Ä–µ–∑–∞–Ω ‚Äî –ø—Ä–æ–≤–µ—Ä—å –∏—Å—Ç–æ—á–Ω–∏–∫."
}

# ===============================
# üéõ –ö–ù–û–ü–ö–ò –ò–ù–¢–ï–†–§–ï–ô–°–ê
# ===============================
BUTTONS = {
    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    'create_post': "üìù –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç",
    'auto_mode': "üîÑ –†–µ–∂–∏–º: AUTO",
    'settings': "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
    'queue': "üìã –û—á–µ—Ä–µ–¥—å ({count})",

    # –ü—Ä–µ–≤—å—é –ø–æ—Å—Ç–∞
    'publish_now': "‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å",
    'schedule_post': "‚è∞ –û—Ç–ª–æ–∂–∏—Ç—å –ø–æ—Å—Ç",
    'delete_post': "üóë –£–¥–∞–ª–∏—Ç—å",
    'improve_post': "‚úèÔ∏è –î–æ—Ä–∞–±–æ—Ç–∞—Ç—å",
    'cancel_post': "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",

    # –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    'in_30_min': "‚è∞ –ß–µ—Ä–µ–∑ 30 –º–∏–Ω",
    'in_1_hour': "üïê –ß–µ—Ä–µ–∑ 1 —á–∞—Å",
    'tomorrow_9am': "üìÖ –ó–∞–≤—Ç—Ä–∞ –≤ 9:00",
    'choose_time': "‚è∞ –í—ã–±—Ä–∞—Ç—å –≤—Ä–µ–º—è",
    'distribute_auto': "üîÑ –†–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å",
    'set_custom_time': "‚è∞ –ó–∞–¥–∞—Ç—å –≤—Ä–µ–º—è",

    # –û—á–µ—Ä–µ–¥—å
    'refresh_queue': "üîÑ –û–±–Ω–æ–≤–∏—Ç—å",
    'back_to_menu': "üîô –í –º–µ–Ω—é",
    'publish_now_queue': "‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å",
    'change_time': "‚è∞ –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è",
    'cancel_publication': "üóë –û—Ç–º–µ–Ω–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é",
    'back_to_queue': "üîô –ö —Å–ø–∏—Å–∫—É –æ—á–µ—Ä–µ–¥–∏",

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    'edit_style_prompt': "üìù –°—Ç–∏–ª—å –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
    'edit_group_prompt': "‚úÇÔ∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –≥—Ä—É–ø–ø—ã",
    'edit_improve_prompt': "üîß –î–æ—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Å—Ç–æ–≤",
    'change_admin': "üë§ –°–º–µ–Ω–∏—Ç—å –∞–¥–º–∏–Ω–∞",
    'change_group': "üì¢ –°–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É",
    'show_stats': "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
    'back_to_settings': "üîô –ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º",

    # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–æ–≤
    'view_current_prompt': "üìñ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–π",
    'edit_prompt': "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–º–ø—Ç",
    'reset_prompt': "üîÑ –°–±—Ä–æ—Å–∏—Ç—å –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π",

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    'confirm_yes': "‚úÖ –î–∞, –ø–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–∞–≤–∞",
    'confirm_no': "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å"
}

# ===============================
# üìä –ù–ê–°–¢–†–û–ô–ö–ò –†–ê–ë–û–¢–´
# ===============================
SETTINGS = {
    'max_preview_length': 4000,  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –ø—Ä–µ–≤—å—é
    'media_caption_limit': 1020,  # –õ–∏–º–∏—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ –∫ –º–µ–¥–∏–∞
    'album_processing_delay': 2,  # –ó–∞–¥–µ—Ä–∂–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–ª—å–±–æ–º–∞ (—Å–µ–∫)
    'ai_request_timeout': 60,  # –¢–∞–π–º–∞—É—Ç AI –∑–∞–ø—Ä–æ—Å–∞ (—Å–µ–∫)
    'ai_max_tokens': 4000,  # –ú–∞–∫—Å–∏–º—É–º —Ç–æ–∫–µ–Ω–æ–≤ –æ—Ç AI
    'ai_temperature': 0.7,  # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ AI
    'deepseek_model': 'deepseek-chat',  # –ú–æ–¥–µ–ª—å DeepSeek
    'deepseek_base_url': 'https://api.deepseek.com',
    'log_level': 'INFO',  # –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    'log_file': 'bot.log',  # –§–∞–π–ª –ª–æ–≥–æ–≤
    'max_retries': 3,  # –ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    'retry_delay': 2  # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏ (—Å–µ–∫)
}

# ===============================
# üé® PROMPT NAMES (–¥–ª—è UI)
# ===============================
PROMPT_NAMES = {
    'style_formatting': '–°—Ç–∏–ª—å –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
    'group_processing': '–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –≥—Ä—É–ø–ø—ã',
    'post_improvement': '–î–æ—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Å—Ç–æ–≤'
}

# ===============================
# üìã –í–†–ï–ú–ï–ù–ù–´–ï –°–õ–û–¢–´ (–¥–ª—è UI)
# ===============================
QUICK_SCHEDULE_OPTIONS = [
    {'text': BUTTONS['in_30_min'], 'minutes': 30},
    {'text': BUTTONS['in_1_hour'], 'minutes': 60},
    {'text': BUTTONS['tomorrow_9am'], 'tomorrow': True, 'hour': 9, 'minute': 0}
]


# ===============================
# üîß –§–£–ù–ö–¶–ò–ò –î–õ–Ø –û–ë–ù–û–í–õ–ï–ù–ò–Ø –ö–û–ù–§–ò–ì–ê
# ===============================

def update_admin_id(new_admin_id: int) -> bool:
    """–û–±–Ω–æ–≤–ª—è–µ—Ç ID –∞–¥–º–∏–Ω–∞ –≤ .env —Ñ–∞–π–ª–µ"""
    try:
        env_path = '.env'

        # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π .env —Ñ–∞–π–ª
        lines = []
        if os.path.exists(env_path):
            with open(env_path, 'r', encoding='utf-8') as f:
                lines = f.readlines()

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º MY_ID
        updated = False
        for i, line in enumerate(lines):
            if line.startswith('MY_ID='):
                lines[i] = f'MY_ID={new_admin_id}\n'
                updated = True
                break

        if not updated:
            lines.append(f'MY_ID={new_admin_id}\n')

        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
        with open(env_path, 'w', encoding='utf-8') as f:
            f.writelines(lines)

        # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        global ADMIN_ID
        ADMIN_ID = new_admin_id

        return True
    except Exception as e:
        import logging
        logging.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ID –∞–¥–º–∏–Ω–∞: {e}")
        return False


def update_group_id(new_group_id: int) -> bool:
    """–û–±–Ω–æ–≤–ª—è–µ—Ç ID –≥—Ä—É–ø–ø—ã –≤ .env —Ñ–∞–π–ª–µ"""
    try:
        env_path = '.env'

        # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π .env —Ñ–∞–π–ª
        lines = []
        if os.path.exists(env_path):
            with open(env_path, 'r', encoding='utf-8') as f:
                lines = f.readlines()

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º GROUP_ID
        updated = False
        for i, line in enumerate(lines):
            if line.startswith('GROUP_ID='):
                lines[i] = f'GROUP_ID={new_group_id}\n'
                updated = True
                break

        if not updated:
            lines.append(f'GROUP_ID={new_group_id}\n')

        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
        with open(env_path, 'w', encoding='utf-8') as f:
            f.writelines(lines)

        # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        global GROUP_ID
        GROUP_ID = new_group_id

        return True
    except Exception as e:
        import logging
        logging.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ID –≥—Ä—É–ø–ø—ã: {e}")
        return False


def validate_config() -> tuple[bool, list[str]]:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    errors = []

    if not API_TOKEN:
        errors.append("–ù–µ –∑–∞–¥–∞–Ω API_TOKEN –≤ .env —Ñ–∞–π–ª–µ")

    if not ADMIN_ID:
        errors.append("–ù–µ –∑–∞–¥–∞–Ω MY_ID –≤ .env —Ñ–∞–π–ª–µ")

    if not GROUP_ID:
        errors.append("–ù–µ –∑–∞–¥–∞–Ω GROUP_ID –≤ .env —Ñ–∞–π–ª–µ")

    if not DEEPSEEK_API_KEY:
        errors.append("–ù–µ –∑–∞–¥–∞–Ω DEEPSEEK API –∫–ª—é—á –≤ .env —Ñ–∞–π–ª–µ")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ø—Ä–æ–º–ø—Ç–æ–≤
    if not os.path.exists('prompts'):
        try:
            os.makedirs('prompts')
        except Exception as e:
            errors.append(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é prompts: {e}")

    return len(errors) == 0, errors


def get_config_summary() -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–≤–æ–¥–∫—É –ø–æ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    return f"""üîß **–¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:**

üë§ **–ê–¥–º–∏–Ω ID:** `{ADMIN_ID or '–ù–ï –ó–ê–î–ê–ù'}`
üì¢ **–ì—Ä—É–ø–ø–∞ ID:** `{GROUP_ID or '–ù–ï –ó–ê–î–ê–ù–ê'}`
ü§ñ **API Token:** {'‚úÖ –ó–∞–¥–∞–Ω' if API_TOKEN else '‚ùå –ù–ï –ó–ê–î–ê–ù'}
üß† **DeepSeek API:** {'‚úÖ –ó–∞–¥–∞–Ω' if DEEPSEEK_API_KEY else '‚ùå –ù–ï –ó–ê–î–ê–ù'}
üìù **–ü—Ä–æ–º–ø—Ç—ã:** {len(PROMPT_PATHS)} —à—Ç.
‚è∞ **–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:** {sum(len(slots) for slots in POSTING_SCHEDULE.values())} —Å–ª–æ—Ç–æ–≤"""